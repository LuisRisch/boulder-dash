#include <stdio.h>
#include <stdlib.h>
#include <allegro5/allegro5.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_primitives.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>

#define BUFFER_WIDTH 320
#define BUFFER_HEIGHT 240
#define DISPLAY_SCALE 3
#define DISPLAY_WIDTH (BUFFER_WIDTH * DISPLAY_SCALE)
#define DISPLAY_HEIGHT (BUFFER_HEIGHT * DISPLAY_SCALE)
#define KEY_SEEN 1
#define KEY_RELEASED 2

#define ROCKFORD_SPRITE_WIDTH 32
#define ROCKFORD_SPRITE_HEIGHT 32
#define ROCKFORD_SCALE 0.5
#define ROCKFORD_WIDTH ROCKFORD_SPRITE_WIDTH * ROCKFORD_SCALE
#define ROCKFORD_HEIGHT ROCKFORD_SPRITE_HEIGHT * ROCKFORD_SCALE
#define ROCKFORD_SPEED 16
#define ROCKFORD_MAX_X (BUFFER_WIDTH - ROCKFORD_WIDTH)
#define ROCKFORD_MAX_Y (BUFFER_HEIGHT - ROCKFORD_HEIGHT)
#define NO_DIRECTION -1
#define DOWN 0
#define LEFT 1
#define RIGHT 2
#define UP 3

#define DIAMOND_SPRITE_WIDTH 32
#define DIAMOND_SPRITE_HEIGHT 32
#define DIAMOND_SCALE 0.5
#define DIAMOND_WIDTH DIAMOND_SPRITE_WIDTH * DIAMOND_SCALE
#define DIAMOND_HEIGHT DIAMOND_SPRITE_HEIGHT * DIAMOND_SCALE
#define DIAMOND_SCORE 10

#define FIREFLY_SPRITE_WIDTH 32
#define FIREFLY_SPRITE_HEIGHT 32
#define FIREFLY_SCALE 0.5
#define FIREFLY_WIDTH FIREFLY_SPRITE_WIDTH * FIREFLY_SCALE
#define FIREFLY_HEIGHT FIREFLY_SPRITE_HEIGHT * FIREFLY_SCALE

#define AMOEBA_SPRITE_WIDTH 32
#define AMOEBA_SPRITE_HEIGHT 32
#define AMOEBA_SCALE 0.5
#define AMOEBA_WIDTH AMOEBA_SPRITE_WIDTH * AMOEBA_SCALE
#define AMOEBA_HEIGHT AMOEBA_SPRITE_HEIGHT * AMOEBA_SCALE

#define BUTTERFLY_SPRITE_WIDTH 32
#define BUTTERFLY_SPRITE_HEIGHT 32
#define BUTTERFLY_SCALE 0.5
#define BUTTERFLY_WIDTH BUTTERFLY_SPRITE_WIDTH * BUTTERFLY_SCALE
#define BUTTERFLY_HEIGHT BUTTERFLY_SPRITE_HEIGHT * BUTTERFLY_SCALE

#define EXIT_SPRITE_WIDTH 32
#define EXIT_SPRITE_HEIGHT 32
#define EXIT_SCALE 0.5
#define EXIT_WIDTH EXIT_SPRITE_WIDTH * EXIT_SCALE
#define EXIT_HEIGHT EXIT_SPRITE_HEIGHT * EXIT_SCALE

#define MAGIC_WALL_SPRITE_WIDTH 32
#define MAGIC_WALL_SPRITE_HEIGHT 32
#define MAGIC_WALL_SCALE 0.5
#define MAGIC_WALL_WIDTH MAGIC_WALL_SPRITE_WIDTH * MAGIC_WALL_SCALE
#define MAGIC_WALL_HEIGHT MAGIC_WALL_SPRITE_HEIGHT * MAGIC_WALL_SCALE

#define STEEL_WALL_SPRITE_WIDTH 32
#define STEEL_WALL_SPRITE_HEIGHT 32
#define STEEL_WALL_SCALE 0.5
#define STEEL_WALL_WIDTH STEEL_WALL_SPRITE_WIDTH * STEEL_WALL_SCALE
#define STEEL_WALL_HEIGHT STEEL_WALL_SPRITE_HEIGHT * STEEL_WALL_SCALE

#define BOULDER_SPRITE_WIDTH 32
#define BOULDER_SPRITE_HEIGHT 32
#define BOULDER_SCALE 0.5
#define BOULDER_WIDTH BOULDER_SPRITE_WIDTH * BOULDER_SCALE
#define BOULDER_HEIGHT BOULDER_SPRITE_HEIGHT * BOULDER_SCALE

#define DIRT_SPRITE_WIDTH 32
#define DIRT_SPRITE_HEIGHT 32
#define DIRT_SCALE 0.5
#define DIRT_WIDTH DIRT_SPRITE_WIDTH * DIRT_SCALE
#define DIRT_HEIGHT DIRT_SPRITE_HEIGHT * DIRT_SCALE

void initialize(bool isInitialized, const char *description); 

//function to detect collision between two coordinates (x1,y1) and (x2,y2)
bool isCollision(int x1, int y1, int x2, int y2);
